<searchdir:include>
<searchdir:include/common>
<searchdir:include/components>
<searchdir:include/dais>
<searchdir:include/pipelines/cavs>
<searchdir:cavs/platform/intel>

<vendor-token.conf>
<tokens.conf>
<virtual.conf>
<passthrough-playback.conf>
<passthrough-capture.conf>
<mixin-playback.conf>
<mixout-playback.conf>
<mixin-capture.conf>
<mixout-capture.conf>
<passthrough-be.conf>
<data.conf>
<pcm.conf>
<pcm_caps.conf>
<fe_dai.conf>
<hda.conf>
<dmic.conf>
<pdm_config.conf>
<hw_config.conf>
<manifest.conf>
<route.conf>
<cavs/common_definitions.conf>
<dmic-default.conf>

Define {
	HDA_CONFIG  "none"
	PLATFORM "none"
	NUM_DMICS 0
}

# override defaults with platform-specific config
IncludeByKey.PLATFORM {
	"cnl"	"platform/intel/cnl.conf"
}

# include HDA config if needed.
IncludeByKey.HDA_CONFIG {
	"passthrough"	"cavs-passthrough-hda.conf"
	"mix"		"cavs-mixin-mixout-hda.conf"
}

# include DMIC config if needed.
IncludeByKey.NUM_DMICS {
	"[1-4]"	"platform/intel/dmic-generic.conf"
}

Object.Dai {
	HDA.4 {
		name iDisp1
		id 1
		default_hw_conf_id 1
		Object.Base.hw_config.HDA4 {}
		direction playback
	}
	HDA.5 {
		name iDisp2
		id 2
		default_hw_conf_id 2
		Object.Base.hw_config.HDA5 {}
		direction playback
	}
	HDA.6 {
		name iDisp3
		id 3
		default_hw_conf_id 3
		Object.Base.hw_config.HDA6 {}
		direction playback
	}
}
Object.Pipeline {
	passthrough-playback.1 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.6.1'
		}
		Object.Widget.copier.1 {
			stream_name 'Passthrough Playback 3'
		}

		format s16le
		index 5
	}
	passthrough-be.1 {
		direction	"playback"
		index 6
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.6.1'
		}

		Object.Widget.copier.1 {
			stream_name "iDisp1"
			dai_type "HDA"
			copier_type "HDA"
		}
		format s16le
	}
	passthrough-playback.2 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.8.1'
		}
		Object.Widget.copier.1 {
			stream_name 'Passthrough Playback 4'
		}

		format s16le
		index 7
	}
	passthrough-be.2 {
		direction	"playback"
		index 8
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.8.1'
		}

		Object.Widget.copier.1 {
			stream_name 'iDisp2'
			dai_type "HDA"
			copier_type "HDA"
		}
		format s16le
	}
	passthrough-playback.3 {
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.10.1'
		}
		Object.Widget.copier.1 {
			stream_name 'Passthrough Playback 5'
		}

		format s16le
		index 9
	}
	passthrough-be.3 {
		direction	"playback"
		index 10
		Object.Widget.pipeline.1 {
			stream_name 'copier.HDA.10.1'
		}

		Object.Widget.copier.1 {
			stream_name 'iDisp3'
			dai_type "HDA"
			copier_type "HDA"
		}
		format s16le
	}
}
Object.PCM {
	pcm.2 {
		name HDMI1
		id 3
		Object.Base.fe_dai.HDMI1 {}
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 3'
			formats 'S32_LE,S24_LE,S16_LE'
		}
		direction playback
	}
	pcm.3 {
		name HDMI2
		id 4
		Object.Base.fe_dai.HDMI2 {}
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 4'
			formats 'S32_LE,S24_LE,S16_LE'
		}
		direction playback
	}
	pcm.4 {
		name HDMI3
		id 5
		Object.Base.fe_dai.HDMI3 {}
		Object.PCM.pcm_caps.playback {
			name 'Passthrough Playback 5'
			formats 'S32_LE,S24_LE,S16_LE'
		}
		direction playback
	}
}

# top-level pipeline connections
Object.Base.route.10 {
        source 'copier.host.5.1'
        sink 'copier.HDA.6.1'
}
Object.Base.route.11 {
        source 'copier.host.7.1'
        sink 'copier.HDA.8.1'
}
Object.Base.route.12 {
        source 'copier.host.9.1'
        sink 'copier.HDA.10.1'
}

Object.Widget.virtual {
	codec0_in {
		type input
		index 1
	}
	codec1_in {
		type input
		index 2
	}
	codec0_out {
		type output
		index 3
	}
	codec1_out {
		type output
		index 4
	}
	codec2_in {
		type input
		index 5
	}
	codec2_out {
		type output
		index 6
	}
	iDisp1_out {
		type output
		index 7
	}
	iDisp2_out {
		type output
		index 8
	}
	iDisp3_out {
		type output
		index 9
	}
	'iDisp3 Tx' {
		type out_drv
		index 0
	}
	'iDisp2 Tx' {
		type out_drv
		index 1
	}
	'iDisp1 Tx' {
		type out_drv
		index 2
	}
	'Analog CPU Playback' {
		type out_drv
		index 3
	}
	'Digital CPU Playback' {
		type out_drv
		index 4
	}
	'Alt Analog CPU Playback' {
		type out_drv
		index 5
	}
	'Analog CPU Capture' {
		type input
		index 6
	}
	'Digital CPU Capture' {
		type input
		index 7
	}
	'Alt Analog CPU Capture' {
		type input
		index 8
	}
}
